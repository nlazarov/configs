# set prefix key to ctrl-a
unbind-key C-b
set-option -g prefix C-a

run-shell "powerline-daemon -q"
source "$PIP_PACK_DIR/powerline/bindings/tmux/powerline.conf"

# 0 is too far from ` ;)
set -g base-index 1

# toggle last window like screen
bind-key C-a last-window

bind-key -r < swap-window -t -
bind-key -r > swap-window -t +

setw -g mode-keys vi

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-pipe "xclip -sel clip -i"

# remap pane split
unbind '"'
bind '"' split-window -h -c '#{pane_current_path}'
unbind %
bind % split-window -v -c '#{pane_current_path}'

# Use 256 color terminal
set -g default-terminal "screen-256color"

# enable wm window titles
set -g set-titles on

set -g mouse on

# status-bar
set -g status-interval 5
set -g status-left-length 90
set -g status-right-length 60

if-shell 'test "$(uname)" = "Darwin"' 'source ~/.tmux-osx.conf'

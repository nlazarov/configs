set -o vi
stty -ixon

parse_git_branch() {
     git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

function diffuse-rev() {
    diffuse -s -D -r $1 -r $2 `git diff --name-only $1...$2`
}

function test-widget() {
    xvfb-run gulp tests --tests="tests/$1/**" --browser="$2"
}

function dbash() {
    docker exec -it "${APP-forms}_${1?define_container}_1" bash -c "stty cols 200 && bash"
}

function dyarn() {
    docker exec -u formuser -it "${APP-forms}_yarn_1" bash -c "cd /var/www/forms/ui && /home/formuser/.yarn/bin/yarn $*"
}

function ddjango() {
    docker exec -it "${APP-forms}_django_1" bash -c "stty cols 200 && ./entrypoint.sh bash -c 'cd  /var/www/forms/forms && $*'"
}

function dshell() {
    ddjango ./manage.py shell_plus
}

function venv() {
    source activate $1
}

function dlogs() {
    APP=${1:-app}

    docker-compose  -p $APP \
                    -f ~/hs/dev/docker-compose.infra.dev.yml \
                    -f ~/hs/dev/docker-compose.forms.dev.yml \
                    logs -f
}

function hsbackup() {
    local snapshot=~/hs/snapshots/$1

    mkdir -p "$snapshot"
    sudo mv ~/hs/dev/postgres_forms/ "$snapshot/postgres_forms"
}

function hsrestore() {
    local snapshot=~/hs/snapshots/$1

    sudo cp -rf "$snapshot"/* ~/hs/dev/
}

function hsswap() {
    hsbackup $1
    hsrestore $2
}

function url () { xdg-open $1 1>/dev/null 2>&1 }
function circle () { url https://circleci.com/gh/hyperscience/forms/${1+tree/}${1} }
function jira () {
    local url='secure/RapidBoard.jspa?rapidView=19&projectKey=FORM&quickFilter=160'
    [ ! -z "$1" ] && local url="browse/FORM-${1}"
    url "https://hyperscience.atlassian.net/${url}"
}

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

export PATH="$HOME/.rvm/bin:$PATH" # Add RVM to PATH for scripting
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

export PATH="$HOME/.local/bin:$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
export PATH="$HOME/anaconda3/bin:$PATH"
export PATH="$PATH:$HOME/tools/dasht/bin"
export PATH="$PATH:/snap/bin"

export MANPATH="$HOME/tools/dasht/man:$MANPATH"

export PIP_PACK_DIR="$HOME/anaconda3/lib/python3.6/site-packages"
export POWERLINE_CONFIG_COMMAND=powerline-config

if [[ $(uname) == "Darwin" ]]; then
    export PIP_PACK_DIR="/usr/local/lib/python3.6/site-packages"
fi

[[ -e $(which pipenv) ]] && eval "$(pipenv --completion)"

export EDITOR=`which vim`
export APP=forms
export BROWSER=chromium-browser
